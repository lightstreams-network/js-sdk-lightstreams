{
  "contractName": "BancorFormula",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Modified from the original by Slava Balasanov https://github.com/bancorprotocol/contracts Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \\\"\",\"methods\":{\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token)  * Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\",\"params\":{\"_connectorBalance\":\"total connector balance\",\"_connectorWeight\":\"connector weight, represented in ppm, 1-1000000\",\"_depositAmount\":\"deposit amount, in connector token\",\"_supply\":\"token total supply\"},\"return\":\"purchase return amount\"},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token)  * Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\",\"params\":{\"_connectorBalance\":\"total connector\",\"_connectorWeight\":\"constant connector Weight, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the token itself\",\"_supply\":\"token total supply\"},\"return\":\"sale return amount\"}},\"title\":\"Bancor formula by Bancor\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/BancorFormula.sol\":\"BancorFormula\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/BancorFormula.sol\":{\"keccak256\":\"0x924def1b458570f36e7305f1793893d0466359fa6178b89820370f6e3830a7f1\",\"urls\":[\"bzzr://696d651d6ad74af63ec8e367ca33b00b43080e1799efea870dd6623ba9fc4b94\"]},\"/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/Power.sol\":{\"keccak256\":\"0x521fad24029d65af8b787a5876d5d0ac4da691f9579adf1907684f24de3dade4\",\"urls\":[\"bzzr://e7649277c9fc84188d22206d73c8dbb1136d2ff41045012520720637eb038ff2\"]},\"/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600381526020017f302e330000000000000000000000000000000000000000000000000000000000815250600090805190602001906200005192919062000ed6565b506040518060400160405280600381526020017f302e330000000000000000000000000000000000000000000000000000000000815250608190805190602001906200009f92919062000ed6565b50701c35fedd14ffffffffffffffffffffffff6001602060808110620000c157fe5b0181905550701b0ce43b323fffffffffffffffffffffff6001602160808110620000e757fe5b01819055507019f0028ec1ffffffffffffffffffffffff60016022608081106200010d57fe5b01819055507018ded91f0e7fffffffffffffffffffffff60016023608081106200013357fe5b01819055507017d8ec7f0417ffffffffffffffffffffff60016024608081106200015957fe5b01819055507016ddc6556cdbffffffffffffffffffffff60016025608081106200017f57fe5b01819055507015ecf52776a1ffffffffffffffffffffff6001602660808110620001a557fe5b01819055507015060c256cb2ffffffffffffffffffffff6001602760808110620001cb57fe5b0181905550701428a2f98d72ffffffffffffffffffffff6001602860808110620001f157fe5b01819055507013545598e5c23fffffffffffffffffffff60016029608081106200021757fe5b0181905550701288c4161ce1dfffffffffffffffffffff6001602a608081106200023d57fe5b01819055507011c592761c666fffffffffffffffffffff6001602b608081106200026357fe5b018190555070110a688680a757ffffffffffffffffffff6001602c608081106200028957fe5b0181905550701056f1b5bedf77ffffffffffffffffffff6001602d60808110620002af57fe5b0181905550700faadceceeff8bffffffffffffffffffff6001602e60808110620002d557fe5b0181905550700f05dc6b27edadffffffffffffffffffff6001602f60808110620002fb57fe5b0181905550700e67a5a25da4107fffffffffffffffffff60016030608081106200032157fe5b0181905550700dcff115b14eedffffffffffffffffffff60016031608081106200034757fe5b0181905550700d3e7a392431239fffffffffffffffffff60016032608081106200036d57fe5b0181905550700cb2ff529eb71e4fffffffffffffffffff60016033608081106200039357fe5b0181905550700c2d415c3db974afffffffffffffffffff6001603460808110620003b957fe5b0181905550700bad03e7d883f69bffffffffffffffffff6001603560808110620003df57fe5b0181905550700b320d03b2c343d5ffffffffffffffffff60016036608081106200040557fe5b0181905550700abc25204e02828dffffffffffffffffff60016037608081106200042b57fe5b0181905550700a4b16f74ee4bb207fffffffffffffffff60016038608081106200045157fe5b01819055507009deaf736ac1f569ffffffffffffffffff60016039608081106200047757fe5b0181905550700976bd9952c7aa957fffffffffffffffff6001603a608081106200049d57fe5b01819055507009131271922eaa606fffffffffffffffff6001603b60808110620004c357fe5b01819055507008b380f3558668c46fffffffffffffffff6001603c60808110620004e957fe5b0181905550700857ddf0117efa215bffffffffffffffff6001603d608081106200050f57fe5b01819055507007ffffffffffffffffffffffffffffffff6001603e608081106200053557fe5b01819055507007abbf6f6abb9d087fffffffffffffffff6001603f608081106200055b57fe5b018190555070075af62cbac95f7dfa7fffffffffffffff60016040608081106200058157fe5b018190555070070d7fb7452e187ac13fffffffffffffff6001604160808110620005a757fe5b01819055507006c3390ecc8af379295fffffffffffffff6001604260808110620005cd57fe5b018190555070067c00a3b07ffc01fd6fffffffffffffff6001604360808110620005f357fe5b0181905550700637b647c39cbb9d3d27ffffffffffffff60016044608081106200061957fe5b01819055507005f63b1fc104dbd39587ffffffffffffff60016045608081106200063f57fe5b01819055507005b771955b36e12f7235ffffffffffffff60016046608081106200066557fe5b018190555070057b3d49dda84556d6f6ffffffffffffff60016047608081106200068b57fe5b018190555070054183095b2c8ececf30ffffffffffffff6001604860808110620006b157fe5b018190555070050a28be635ca2b888f77fffffffffffff6001604960808110620006d757fe5b01819055507004d5156639708c9db33c3fffffffffffff6001604a60808110620006fd57fe5b01819055507004a23105873875bd52dfdfffffffffffff6001604b608081106200072357fe5b0181905550700471649d87199aa990756fffffffffffff6001604c608081106200074957fe5b01819055507004429a21a029d4c1457cfbffffffffffff6001604d608081106200076f57fe5b0181905550700415bc6d6fb7dd71af2cb3ffffffffffff6001604e608081106200079557fe5b01819055507003eab73b3bbfe282243ce1ffffffffffff6001604f60808110620007bb57fe5b01819055507003c1771ac9fb6b4c18e229ffffffffffff6001605060808110620007e157fe5b0181905550700399e96897690418f785257fffffffffff60016051608081106200080757fe5b0181905550700373fc456c53bb779bf0ea9fffffffffff60016052608081106200082d57fe5b018190555070034f9e8e490c48e67e6ab8bfffffffffff60016053608081106200085357fe5b018190555070032cbfd4a7adc790560b3337ffffffffff60016054608081106200087957fe5b018190555070030b50570f6e5d2acca94613ffffffffff60016055608081106200089f57fe5b01819055507002eb40f9f620fda6b56c2861ffffffffff6001605660808110620008c557fe5b01819055507002cc8340ecb0d0f520a6af58ffffffffff6001605760808110620008eb57fe5b01819055507002af09481380a0a35cf1ba02ffffffffff60016058608081106200091157fe5b0181905550700292c5bdd3b92ec810287b1b3fffffffff60016059608081106200093757fe5b0181905550700277abdcdab07d5a77ac6d6b9fffffffff6001605a608081106200095d57fe5b018190555070025daf6654b1eaa55fd64df5efffffffff6001605b608081106200098357fe5b0181905550700244c49c648baa98192dce88b7ffffffff6001605c60808110620009a957fe5b018190555070022ce03cd5619a311b2471268bffffffff6001605d60808110620009cf57fe5b0181905550700215f77c045fbe885654a44a0fffffffff6001605e60808110620009f557fe5b01819055507001ffffffffffffffffffffffffffffffff6001605f6080811062000a1b57fe5b01819055507001eaefdbdaaee7421fc4d3ede5ffffffff600160606080811062000a4157fe5b01819055507001d6bd8b2eb257df7e8ca57b09bfffffff600160616080811062000a6757fe5b01819055507001c35fedd14b861eb0443f7f133fffffff600160626080811062000a8d57fe5b01819055507001b0ce43b322bcde4a56e8ada5afffffff600160636080811062000ab357fe5b018190555070019f0028ec1fff007f5a195a39dfffffff600160646080811062000ad957fe5b018190555070018ded91f0e72ee74f49b15ba527ffffff600160656080811062000aff57fe5b018190555070017d8ec7f04136f4e5615fd41a63ffffff600160666080811062000b2557fe5b018190555070016ddc6556cdb84bdc8d12d22e6fffffff600160676080811062000b4b57fe5b018190555070015ecf52776a1155b5bd8395814f7fffff600160686080811062000b7157fe5b018190555070015060c256cb23b3b3cc3754cf40ffffff600160696080811062000b9757fe5b01819055507001428a2f98d728ae223ddab715be3fffff6001606a6080811062000bbd57fe5b018190555070013545598e5c23276ccf0ede68034fffff6001606b6080811062000be357fe5b01819055507001288c4161ce1d6f54b7f61081194fffff6001606c6080811062000c0957fe5b018190555070011c592761c666aa641d5a01a40f17ffff6001606d6080811062000c2f57fe5b0181905550700110a688680a7530515f3e6e6cfdcdffff6001606e6080811062000c5557fe5b01819055507001056f1b5bedf75c6bcb2ce8aed428ffff6001606f6080811062000c7b57fe5b01819055506ffaadceceeff8a0890f3875f008277fff600160706080811062000ca057fe5b01819055506ff05dc6b27edad306388a600f6ba0bfff600160716080811062000cc557fe5b01819055506fe67a5a25da41063de1495d5b18cdbfff600160726080811062000cea57fe5b01819055506fdcff115b14eedde6fc3aa5353f2e4fff600160736080811062000d0f57fe5b01819055506fd3e7a3924312399f9aae2e0f868f8fff600160746080811062000d3457fe5b01819055506fcb2ff529eb71e41582cccd5a1ee26fff600160756080811062000d5957fe5b01819055506fc2d415c3db974ab32a51840c0b67edff600160766080811062000d7e57fe5b01819055506fbad03e7d883f69ad5b0a186184e06bff600160776080811062000da357fe5b01819055506fb320d03b2c343d4829abd6075f0cc5ff600160786080811062000dc857fe5b01819055506fabc25204e02828d73c6e80bcdb1a95bf600160796080811062000ded57fe5b01819055506fa4b16f74ee4bb2040a1ec6c15fbbf2df6001607a6080811062000e1257fe5b01819055506f9deaf736ac1f569deb1b5ae3f36c130f6001607b6080811062000e3757fe5b01819055506f976bd9952c7aa957f5937d790ef650376001607c6080811062000e5c57fe5b01819055506f9131271922eaa6064b73a22d0bd4f2bf6001607d6080811062000e8157fe5b01819055506f8b380f3558668c46c91c49a2f8e967b96001607e6080811062000ea657fe5b01819055506f857ddf0117efa215952912839f6473e66001607f6080811062000ecb57fe5b018190555062000f85565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000f1957805160ff191683800117855562000f4a565b8280016001018555821562000f4a579182015b8281111562000f4957825182559160200191906001019062000f2c565b5b50905062000f59919062000f5d565b5090565b62000f8291905b8082111562000f7e57600081600090555060010162000f64565b5090565b90565b611b2d8062000f956000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806329a00e7c1461004657806349f9b0f7146100ac57806354fd4d5014610112575b600080fd5b6100966004803603608081101561005c57600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610195565b6040518082815260200191505060405180910390f35b6100fc600480360360808110156100c257600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506103e1565b6040518082815260200191505060405180910390f35b61011a6106ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015a57808201518184015260208101905061013f565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600080851161020c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e000081525060200191505060405180910390fd5b60008411610265576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a5b6027913960400191505060405180910390fd5b60008363ffffffff16116102c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a826027913960400191505060405180910390fd5b620f424063ffffffff168363ffffffff16111561032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ad16031913960400191505060405180910390fd5b600082141561033e57600090506103d9565b620f424063ffffffff168363ffffffff1614156103815761037a8461036c848861074c90919063ffffffff16565b61078690919063ffffffff16565b90506103d9565b600080600061039987866107ac90919063ffffffff16565b90506103aa818888620f42406107cb565b809350819450505060008260ff166103cb858b61074c90919063ffffffff16565b901c90508881039450505050505b949350505050565b6000808511610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e000081525060200191505060405180910390fd5b600084116104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a5b6027913960400191505060405180910390fd5b60008363ffffffff1611610510576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a826027913960400191505060405180910390fd5b620f424063ffffffff168363ffffffff161115610578576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ad16031913960400191505060405180910390fd5b848211156105d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611aa96028913960400191505060405180910390fd5b60008214156105e357600090506106a6565b848214156105f3578390506106a6565b620f424063ffffffff168363ffffffff1614156106365761062f85610621848761074c90919063ffffffff16565b61078690919063ffffffff16565b90506106a6565b6000806000848803905061064f8882620f4240896107cb565b8093508194505050600061066c848961074c90919063ffffffff16565b905060008360ff1689901b905061069e85610690838561093390919063ffffffff16565b61078690919063ffffffff16565b955050505050505b949350505050565b60818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107445780601f1061071957610100808354040283529160200191610744565b820191906000526020600020905b81548152906001019060200180831161072757829003601f168201915b505050505081565b60008083141561075f5760009050610780565b600082840290508284828161077057fe5b041461077b57600080fd5b809150505b92915050565b600080821161079457600080fd5b600082848161079f57fe5b0490508091505092915050565b6000808284019050838110156107c157600080fd5b8091505092915050565b60008070020000000000000000000000000000000086106107e857fe5b8486101561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b600080866f8000000000000000000000000000000089028161087c57fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156108a8576108a181610953565b91506108b4565b6108b181610ee3565b91505b60008563ffffffff168763ffffffff168402816108cd57fe5b049050700800000000000000000000000000000000811015610900576108f28161100b565b607f9450945050505061092a565b600061090b82611585565b905061092081607f0360ff1683901c8261163a565b8195509550505050505b94509492505050565b60008282111561094257600080fd5b600082840390508091505092915050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886106109ba576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86f800000000000000000000000000000008702816109b657fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a78610610a15576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76f80000000000000000000000000000000870281610a1157fe5b0495505b6f910b022db7ae67ce76b441c27035c6a18610610a70576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16f80000000000000000000000000000000870281610a6c57fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a88610610acb576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86f80000000000000000000000000000000870281610ac757fe5b0495505b6f84102b00893f64c705e841d5d4064bd38610610b26576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36f80000000000000000000000000000000870281610b2257fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a28610610b81576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26f80000000000000000000000000000000870281610b7d57fe5b0495505b6f810100ab00222d861931c15e39b44e998610610bdc576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996f80000000000000000000000000000000870281610bd857fe5b0495505b6f808040155aabbbe9451521693554f7338610610c36576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336f80000000000000000000000000000000870281610c3257fe5b0495505b6f80000000000000000000000000000000860392508291506f8000000000000000000000000000000083840281610c6957fe5b0490507001000000000000000000000000000000008370010000000000000000000000000000000003830281610c9b57fe5b04840193506f8000000000000000000000000000000081830281610cbb57fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281610cec57fe5b04840193506f8000000000000000000000000000000081830281610d0c57fe5b049150700300000000000000000000000000000000836f9999999999999999999999999999999903830281610d3d57fe5b04840193506f8000000000000000000000000000000081830281610d5d57fe5b049150700400000000000000000000000000000000836f9249249249249249249249249249249203830281610d8e57fe5b04840193506f8000000000000000000000000000000081830281610dae57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e03830281610ddf57fe5b04840193506f8000000000000000000000000000000081830281610dff57fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281610e3057fe5b04840193506f8000000000000000000000000000000081830281610e5057fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d8903830281610e8157fe5b04840193506f8000000000000000000000000000000081830281610ea157fe5b049150700800000000000000000000000000000000836f8888888888888888888888888888888803830281610ed257fe5b048401935083945050505050919050565b6000806000905060008390507001000000000000000000000000000000008110610f50576000610f2b6f800000000000000000000000000000008381610f2557fe5b046119d8565b90508060ff1682901c91506f800000000000000000000000000000008160ff16029250505b6f80000000000000000000000000000000811115610fd6576000607f90505b60008160ff161115610fd4576f8000000000000000000000000000000082830281610f9657fe5b0491507001000000000000000000000000000000008210610fc857600182901c91506001810360ff166001901b830192505b80600190039050610f6f565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f883028161100157fe5b0492505050919050565b600080600090506000806f10000000000000000000000000000000858161102e57fe5b0691508190506f800000000000000000000000000000008282028161104f57fe5b0490506710e1b3be415a00008102830192506f800000000000000000000000000000008282028161107c57fe5b0490506705a0913f6b1e00008102830192506f80000000000000000000000000000000828202816110a957fe5b049050670168244fdac780008102830192506f80000000000000000000000000000000828202816110d657fe5b049050664807432bc180008102830192506f800000000000000000000000000000008282028161110257fe5b049050660c0135dca040008102830192506f800000000000000000000000000000008282028161112e57fe5b0490506601b707b1cdc0008102830192506f800000000000000000000000000000008282028161115a57fe5b0490506536e0f639b8008102830192506f800000000000000000000000000000008282028161118557fe5b049050650618fee9f8008102830192506f80000000000000000000000000000000828202816111b057fe5b049050649c197dcc008102830192506f80000000000000000000000000000000828202816111da57fe5b049050640e30dce4008102830192506f800000000000000000000000000000008282028161120457fe5b04905064012ebd13008102830192506f800000000000000000000000000000008282028161122e57fe5b0490506317499f008102830192506f800000000000000000000000000000008282028161125757fe5b0490506301a9d4808102830192506f800000000000000000000000000000008282028161128057fe5b049050621c63808102830192506f80000000000000000000000000000000828202816112a857fe5b0490506201c6388102830192506f80000000000000000000000000000000828202816112d057fe5b049050611ab88102830192506f80000000000000000000000000000000828202816112f757fe5b04905061017c8102830192506f800000000000000000000000000000008282028161131e57fe5b04905060148102830192506f800000000000000000000000000000008282028161134457fe5b04905060018102830192506f80000000000000000000000000000000826721c3677c82b40000858161137257fe5b040101925060006f100000000000000000000000000000008616146113c25770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f98402816113be57fe5b0492505b60006f2000000000000000000000000000000086161461140d577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884028161140957fe5b0492505b60006f40000000000000000000000000000000861614611457576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed584028161145357fe5b0492505b60006f800000000000000000000000000000008616146114a0576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84028161149c57fe5b0492505b60007001000000000000000000000000000000008616146114ea576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c58402816114e657fe5b0492505b6000700200000000000000000000000000000000861614611533576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d784028161152f57fe5b0492505b600070040000000000000000000000000000000086161461157a576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784028161157657fe5b0492505b829350505050919050565b600080602090506000607f90505b8060ff166001830160ff1610156115e2576000600282840160ff16816115b557fe5b0490508460018260ff16608081106115c957fe5b0154106115d8578092506115dc565b8091505b50611593565b8360018260ff16608081106115f357fe5b015410611604578092505050611635565b8360018360ff166080811061161557fe5b015410611626578192505050611635565b600061162e57fe5b6000925050505b919050565b60008083905060008090508360ff16858302901c91506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302901c91506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302901c91506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302901c91506e0defabf91302cd95b9ffda500000008202810190508360ff16858302901c91506e02529ca9832b22439efff9b80000008202810190508360ff16858302901c91506d54f1cf12bd04e516b6da880000008202810190508360ff16858302901c91506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302901c91506d012e066e7b839fa050c3090000008202810190508360ff16858302901c91506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302901c91506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302901c91506b3a9316fa79b88eccf2a000008202810190508360ff16858302901c91506b048177ebe1fa8123752000008202810190508360ff16858302901c91506a5263fe90242dcbacf000008202810190508360ff16858302901c91506a057e22099c030d941000008202810190508360ff16858302901c91506957e22099c030d94100008202810190508360ff16858302901c915069052b6b545699763100008202810190508360ff16858302901c9150684985f67696bf7480008202810190508360ff16858302901c91506803dea12ea99e4980008202810190508360ff16858302901c91506731880f2214b6e0008202810190508360ff16858302901c915067025bcff56eb360008202810190508360ff16858302901c9150661b722e10ab10008202810190508360ff16858302901c91506601317c700770008202810190508360ff16858302901c9150650cba84aafa008202810190508360ff16858302901c91506482573a0a008202810190508360ff16858302901c91506405035ad9008202810190508360ff16858302901c9150632f881b008202810190508360ff16858302901c91506301b293408202810190508360ff16858302901c9150620efc408202810190508360ff16858302901c9150617fe08202810190508360ff16858302901c91506104208202810190508360ff16858302901c915060218202810190508360ff16858302901c915060018202810190508360ff166001901b856f0688589cc0e9505e2f2fee558000000083816119cb57fe5b0401019250505092915050565b600080600090506000839050610100811015611a0f575b6001811115611a0a57600181901c90506001820191506119ef565b611a50565b6000608090505b60008160ff161115611a4e578060ff166001901b8210611a3f578060ff1682901c915080831792505b60018160ff16901c9050611a16565b505b819250505091905056fe42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e203042616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e203042616e636f72466f726d756c613a2053656c6c20416d6f756e74206e6f74203c3d20537570706c7942616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854a165627a7a72305820c2c4933f94adbd5656e31151461641bf905c3fe886ab3afc812513745cd999c90029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806329a00e7c1461004657806349f9b0f7146100ac57806354fd4d5014610112575b600080fd5b6100966004803603608081101561005c57600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610195565b6040518082815260200191505060405180910390f35b6100fc600480360360808110156100c257600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506103e1565b6040518082815260200191505060405180910390f35b61011a6106ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015a57808201518184015260208101905061013f565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600080851161020c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e000081525060200191505060405180910390fd5b60008411610265576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a5b6027913960400191505060405180910390fd5b60008363ffffffff16116102c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a826027913960400191505060405180910390fd5b620f424063ffffffff168363ffffffff16111561032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ad16031913960400191505060405180910390fd5b600082141561033e57600090506103d9565b620f424063ffffffff168363ffffffff1614156103815761037a8461036c848861074c90919063ffffffff16565b61078690919063ffffffff16565b90506103d9565b600080600061039987866107ac90919063ffffffff16565b90506103aa818888620f42406107cb565b809350819450505060008260ff166103cb858b61074c90919063ffffffff16565b901c90508881039450505050505b949350505050565b6000808511610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e000081525060200191505060405180910390fd5b600084116104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a5b6027913960400191505060405180910390fd5b60008363ffffffff1611610510576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a826027913960400191505060405180910390fd5b620f424063ffffffff168363ffffffff161115610578576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ad16031913960400191505060405180910390fd5b848211156105d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611aa96028913960400191505060405180910390fd5b60008214156105e357600090506106a6565b848214156105f3578390506106a6565b620f424063ffffffff168363ffffffff1614156106365761062f85610621848761074c90919063ffffffff16565b61078690919063ffffffff16565b90506106a6565b6000806000848803905061064f8882620f4240896107cb565b8093508194505050600061066c848961074c90919063ffffffff16565b905060008360ff1689901b905061069e85610690838561093390919063ffffffff16565b61078690919063ffffffff16565b955050505050505b949350505050565b60818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107445780601f1061071957610100808354040283529160200191610744565b820191906000526020600020905b81548152906001019060200180831161072757829003601f168201915b505050505081565b60008083141561075f5760009050610780565b600082840290508284828161077057fe5b041461077b57600080fd5b809150505b92915050565b600080821161079457600080fd5b600082848161079f57fe5b0490508091505092915050565b6000808284019050838110156107c157600080fd5b8091505092915050565b60008070020000000000000000000000000000000086106107e857fe5b8486101561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b600080866f8000000000000000000000000000000089028161087c57fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156108a8576108a181610953565b91506108b4565b6108b181610ee3565b91505b60008563ffffffff168763ffffffff168402816108cd57fe5b049050700800000000000000000000000000000000811015610900576108f28161100b565b607f9450945050505061092a565b600061090b82611585565b905061092081607f0360ff1683901c8261163a565b8195509550505050505b94509492505050565b60008282111561094257600080fd5b600082840390508091505092915050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886106109ba576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86f800000000000000000000000000000008702816109b657fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a78610610a15576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76f80000000000000000000000000000000870281610a1157fe5b0495505b6f910b022db7ae67ce76b441c27035c6a18610610a70576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16f80000000000000000000000000000000870281610a6c57fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a88610610acb576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86f80000000000000000000000000000000870281610ac757fe5b0495505b6f84102b00893f64c705e841d5d4064bd38610610b26576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36f80000000000000000000000000000000870281610b2257fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a28610610b81576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26f80000000000000000000000000000000870281610b7d57fe5b0495505b6f810100ab00222d861931c15e39b44e998610610bdc576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996f80000000000000000000000000000000870281610bd857fe5b0495505b6f808040155aabbbe9451521693554f7338610610c36576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336f80000000000000000000000000000000870281610c3257fe5b0495505b6f80000000000000000000000000000000860392508291506f8000000000000000000000000000000083840281610c6957fe5b0490507001000000000000000000000000000000008370010000000000000000000000000000000003830281610c9b57fe5b04840193506f8000000000000000000000000000000081830281610cbb57fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281610cec57fe5b04840193506f8000000000000000000000000000000081830281610d0c57fe5b049150700300000000000000000000000000000000836f9999999999999999999999999999999903830281610d3d57fe5b04840193506f8000000000000000000000000000000081830281610d5d57fe5b049150700400000000000000000000000000000000836f9249249249249249249249249249249203830281610d8e57fe5b04840193506f8000000000000000000000000000000081830281610dae57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e03830281610ddf57fe5b04840193506f8000000000000000000000000000000081830281610dff57fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281610e3057fe5b04840193506f8000000000000000000000000000000081830281610e5057fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d8903830281610e8157fe5b04840193506f8000000000000000000000000000000081830281610ea157fe5b049150700800000000000000000000000000000000836f8888888888888888888888888888888803830281610ed257fe5b048401935083945050505050919050565b6000806000905060008390507001000000000000000000000000000000008110610f50576000610f2b6f800000000000000000000000000000008381610f2557fe5b046119d8565b90508060ff1682901c91506f800000000000000000000000000000008160ff16029250505b6f80000000000000000000000000000000811115610fd6576000607f90505b60008160ff161115610fd4576f8000000000000000000000000000000082830281610f9657fe5b0491507001000000000000000000000000000000008210610fc857600182901c91506001810360ff166001901b830192505b80600190039050610f6f565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f883028161100157fe5b0492505050919050565b600080600090506000806f10000000000000000000000000000000858161102e57fe5b0691508190506f800000000000000000000000000000008282028161104f57fe5b0490506710e1b3be415a00008102830192506f800000000000000000000000000000008282028161107c57fe5b0490506705a0913f6b1e00008102830192506f80000000000000000000000000000000828202816110a957fe5b049050670168244fdac780008102830192506f80000000000000000000000000000000828202816110d657fe5b049050664807432bc180008102830192506f800000000000000000000000000000008282028161110257fe5b049050660c0135dca040008102830192506f800000000000000000000000000000008282028161112e57fe5b0490506601b707b1cdc0008102830192506f800000000000000000000000000000008282028161115a57fe5b0490506536e0f639b8008102830192506f800000000000000000000000000000008282028161118557fe5b049050650618fee9f8008102830192506f80000000000000000000000000000000828202816111b057fe5b049050649c197dcc008102830192506f80000000000000000000000000000000828202816111da57fe5b049050640e30dce4008102830192506f800000000000000000000000000000008282028161120457fe5b04905064012ebd13008102830192506f800000000000000000000000000000008282028161122e57fe5b0490506317499f008102830192506f800000000000000000000000000000008282028161125757fe5b0490506301a9d4808102830192506f800000000000000000000000000000008282028161128057fe5b049050621c63808102830192506f80000000000000000000000000000000828202816112a857fe5b0490506201c6388102830192506f80000000000000000000000000000000828202816112d057fe5b049050611ab88102830192506f80000000000000000000000000000000828202816112f757fe5b04905061017c8102830192506f800000000000000000000000000000008282028161131e57fe5b04905060148102830192506f800000000000000000000000000000008282028161134457fe5b04905060018102830192506f80000000000000000000000000000000826721c3677c82b40000858161137257fe5b040101925060006f100000000000000000000000000000008616146113c25770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f98402816113be57fe5b0492505b60006f2000000000000000000000000000000086161461140d577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884028161140957fe5b0492505b60006f40000000000000000000000000000000861614611457576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed584028161145357fe5b0492505b60006f800000000000000000000000000000008616146114a0576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84028161149c57fe5b0492505b60007001000000000000000000000000000000008616146114ea576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c58402816114e657fe5b0492505b6000700200000000000000000000000000000000861614611533576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d784028161152f57fe5b0492505b600070040000000000000000000000000000000086161461157a576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784028161157657fe5b0492505b829350505050919050565b600080602090506000607f90505b8060ff166001830160ff1610156115e2576000600282840160ff16816115b557fe5b0490508460018260ff16608081106115c957fe5b0154106115d8578092506115dc565b8091505b50611593565b8360018260ff16608081106115f357fe5b015410611604578092505050611635565b8360018360ff166080811061161557fe5b015410611626578192505050611635565b600061162e57fe5b6000925050505b919050565b60008083905060008090508360ff16858302901c91506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302901c91506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302901c91506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302901c91506e0defabf91302cd95b9ffda500000008202810190508360ff16858302901c91506e02529ca9832b22439efff9b80000008202810190508360ff16858302901c91506d54f1cf12bd04e516b6da880000008202810190508360ff16858302901c91506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302901c91506d012e066e7b839fa050c3090000008202810190508360ff16858302901c91506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302901c91506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302901c91506b3a9316fa79b88eccf2a000008202810190508360ff16858302901c91506b048177ebe1fa8123752000008202810190508360ff16858302901c91506a5263fe90242dcbacf000008202810190508360ff16858302901c91506a057e22099c030d941000008202810190508360ff16858302901c91506957e22099c030d94100008202810190508360ff16858302901c915069052b6b545699763100008202810190508360ff16858302901c9150684985f67696bf7480008202810190508360ff16858302901c91506803dea12ea99e4980008202810190508360ff16858302901c91506731880f2214b6e0008202810190508360ff16858302901c915067025bcff56eb360008202810190508360ff16858302901c9150661b722e10ab10008202810190508360ff16858302901c91506601317c700770008202810190508360ff16858302901c9150650cba84aafa008202810190508360ff16858302901c91506482573a0a008202810190508360ff16858302901c91506405035ad9008202810190508360ff16858302901c9150632f881b008202810190508360ff16858302901c91506301b293408202810190508360ff16858302901c9150620efc408202810190508360ff16858302901c9150617fe08202810190508360ff16858302901c91506104208202810190508360ff16858302901c915060218202810190508360ff16858302901c915060018202810190508360ff166001901b856f0688589cc0e9505e2f2fee558000000083816119cb57fe5b0401019250505092915050565b600080600090506000839050610100811015611a0f575b6001811115611a0a57600181901c90506001820191506119ef565b611a50565b6000608090505b60008160ff161115611a4e578060ff166001901b8210611a3f578060ff1682901c915080831792505b60018160ff16901c9050611a16565b505b819250505091905056fe42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e203042616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e203042616e636f72466f726d756c613a2053656c6c20416d6f756e74206e6f74203c3d20537570706c7942616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854a165627a7a72305820c2c4933f94adbd5656e31151461641bf905c3fe886ab3afc812513745cd999c90029",
  "sourceMap": "10737:3712:12:-;;;10514:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10803::12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13788:36:18;13770:11;13782:2;13770:15;;;;;;;;:54;;;;13848:36;13830:11;13842:2;13830:15;;;;;;;;:54;;;;13908:36;13890:11;13902:2;13890:15;;;;;;;;:54;;;;13968:36;13950:11;13962:2;13950:15;;;;;;;;:54;;;;14028:36;14010:11;14022:2;14010:15;;;;;;;;:54;;;;14088:36;14070:11;14082:2;14070:15;;;;;;;;:54;;;;14148:36;14130:11;14142:2;14130:15;;;;;;;;:54;;;;14208:36;14190:11;14202:2;14190:15;;;;;;;;:54;;;;14268:36;14250:11;14262:2;14250:15;;;;;;;;:54;;;;14328:36;14310:11;14322:2;14310:15;;;;;;;;:54;;;;14388:36;14370:11;14382:2;14370:15;;;;;;;;:54;;;;14448:36;14430:11;14442:2;14430:15;;;;;;;;:54;;;;14508:36;14490:11;14502:2;14490:15;;;;;;;;:54;;;;14568:36;14550:11;14562:2;14550:15;;;;;;;;:54;;;;14628:36;14610:11;14622:2;14610:15;;;;;;;;:54;;;;14688:36;14670:11;14682:2;14670:15;;;;;;;;:54;;;;14748:36;14730:11;14742:2;14730:15;;;;;;;;:54;;;;14808:36;14790:11;14802:2;14790:15;;;;;;;;:54;;;;14868:36;14850:11;14862:2;14850:15;;;;;;;;:54;;;;14928:36;14910:11;14922:2;14910:15;;;;;;;;:54;;;;14988:36;14970:11;14982:2;14970:15;;;;;;;;:54;;;;15048:36;15030:11;15042:2;15030:15;;;;;;;;:54;;;;15108:36;15090:11;15102:2;15090:15;;;;;;;;:54;;;;15168:36;15150:11;15162:2;15150:15;;;;;;;;:54;;;;15228:36;15210:11;15222:2;15210:15;;;;;;;;:54;;;;15288:36;15270:11;15282:2;15270:15;;;;;;;;:54;;;;15348:36;15330:11;15342:2;15330:15;;;;;;;;:54;;;;15408:36;15390:11;15402:2;15390:15;;;;;;;;:54;;;;15468:36;15450:11;15462:2;15450:15;;;;;;;;:54;;;;15528:36;15510:11;15522:2;15510:15;;;;;;;;:54;;;;15588:36;15570:11;15582:2;15570:15;;;;;;;;:54;;;;15648:36;15630:11;15642:2;15630:15;;;;;;;;:54;;;;15708:36;15690:11;15702:2;15690:15;;;;;;;;:54;;;;15768:36;15750:11;15762:2;15750:15;;;;;;;;:54;;;;15828:36;15810:11;15822:2;15810:15;;;;;;;;:54;;;;15888:36;15870:11;15882:2;15870:15;;;;;;;;:54;;;;15948:36;15930:11;15942:2;15930:15;;;;;;;;:54;;;;16008:36;15990:11;16002:2;15990:15;;;;;;;;:54;;;;16068:36;16050:11;16062:2;16050:15;;;;;;;;:54;;;;16128:36;16110:11;16122:2;16110:15;;;;;;;;:54;;;;16188:36;16170:11;16182:2;16170:15;;;;;;;;:54;;;;16248:36;16230:11;16242:2;16230:15;;;;;;;;:54;;;;16308:36;16290:11;16302:2;16290:15;;;;;;;;:54;;;;16368:36;16350:11;16362:2;16350:15;;;;;;;;:54;;;;16428:36;16410:11;16422:2;16410:15;;;;;;;;:54;;;;16488:36;16470:11;16482:2;16470:15;;;;;;;;:54;;;;16548:36;16530:11;16542:2;16530:15;;;;;;;;:54;;;;16608:36;16590:11;16602:2;16590:15;;;;;;;;:54;;;;16668:36;16650:11;16662:2;16650:15;;;;;;;;:54;;;;16728:36;16710:11;16722:2;16710:15;;;;;;;;:54;;;;16788:36;16770:11;16782:2;16770:15;;;;;;;;:54;;;;16848:36;16830:11;16842:2;16830:15;;;;;;;;:54;;;;16908:36;16890:11;16902:2;16890:15;;;;;;;;:54;;;;16968:36;16950:11;16962:2;16950:15;;;;;;;;:54;;;;17028:36;17010:11;17022:2;17010:15;;;;;;;;:54;;;;17088:36;17070:11;17082:2;17070:15;;;;;;;;:54;;;;17148:36;17130:11;17142:2;17130:15;;;;;;;;:54;;;;17208:36;17190:11;17202:2;17190:15;;;;;;;;:54;;;;17268:36;17250:11;17262:2;17250:15;;;;;;;;:54;;;;17328:36;17310:11;17322:2;17310:15;;;;;;;;:54;;;;17388:36;17370:11;17382:2;17370:15;;;;;;;;:54;;;;17448:36;17430:11;17442:2;17430:15;;;;;;;;:54;;;;17508:36;17490:11;17502:2;17490:15;;;;;;;;:54;;;;17568:36;17550:11;17562:2;17550:15;;;;;;;;:54;;;;17628:36;17610:11;17622:2;17610:15;;;;;;;;:54;;;;17688:36;17670:11;17682:2;17670:15;;;;;;;;:54;;;;17748:36;17730:11;17742:2;17730:15;;;;;;;;:54;;;;17808:36;17790:11;17802:2;17790:15;;;;;;;;:54;;;;17869:36;17850:11;17862:3;17850:16;;;;;;;;:55;;;;17930:36;17911:11;17923:3;17911:16;;;;;;;;:55;;;;17991:36;17972:11;17984:3;17972:16;;;;;;;;:55;;;;18052:36;18033:11;18045:3;18033:16;;;;;;;;:55;;;;18113:36;18094:11;18106:3;18094:16;;;;;;;;:55;;;;18174:36;18155:11;18167:3;18155:16;;;;;;;;:55;;;;18235:36;18216:11;18228:3;18216:16;;;;;;;;:55;;;;18296:36;18277:11;18289:3;18277:16;;;;;;;;:55;;;;18357:36;18338:11;18350:3;18338:16;;;;;;;;:55;;;;18418:36;18399:11;18411:3;18399:16;;;;;;;;:55;;;;18479:36;18460:11;18472:3;18460:16;;;;;;;;:55;;;;18540:36;18521:11;18533:3;18521:16;;;;;;;;:55;;;;18601:36;18582:11;18594:3;18582:16;;;;;;;;:55;;;;18662:36;18643:11;18655:3;18643:16;;;;;;;;:55;;;;18723:36;18704:11;18716:3;18704:16;;;;;;;;:55;;;;18784:36;18765:11;18777:3;18765:16;;;;;;;;:55;;;;18845:36;18826:11;18838:3;18826:16;;;;;;;;:55;;;;18906:36;18887:11;18899:3;18887:16;;;;;;;;:55;;;;18967:36;18948:11;18960:3;18948:16;;;;;;;;:55;;;;19028:36;19009:11;19021:3;19009:16;;;;;;;;:55;;;;19089:36;19070:11;19082:3;19070:16;;;;;;;;:55;;;;19150:36;19131:11;19143:3;19131:16;;;;;;;;:55;;;;19211:36;19192:11;19204:3;19192:16;;;;;;;;:55;;;;19272:36;19253:11;19265:3;19253:16;;;;;;;;:55;;;;19333:36;19314:11;19326:3;19314:16;;;;;;;;:55;;;;19394:36;19375:11;19387:3;19375:16;;;;;;;;:55;;;;19455:36;19436:11;19448:3;19436:16;;;;;;;;:55;;;;19516:36;19497:11;19509:3;19497:16;;;;;;;;:55;;;;10737:3712:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "10737:3712:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10737:3712:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11485:1069;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11485:1069:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13152:1295;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13152:1295:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10803:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10803:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11485:1069;11649:7;11706:1;11696:7;:11;11688:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11776:1;11756:17;:21;11748:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11854:1;11835:16;:20;;;11827:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10873:7;11913:30;;:16;:30;;;;11905:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12068:1;12050:14;:19;12046:48;;;12086:1;12079:8;;;;12046:48;10873:7;12145:30;;:16;:30;;;12141:108;;;12192:50;12224:17;12192:27;12204:14;12192:7;:11;;:27;;;;:::i;:::-;:31;;:50;;;;:::i;:::-;12185:57;;;;12141:108;12254:14;12274:15;12295:13;12311:37;12330:17;12311:14;:18;;:37;;;;:::i;:::-;12295:53;;12376:73;12389:5;12396:17;12415:16;10873:7;12376:5;:73::i;:::-;12354:95;;;;;;;;12455:22;12503:9;12480:32;;:19;12492:6;12480:7;:11;;:19;;;;:::i;:::-;:32;;12455:57;;12542:7;12525:14;:24;12518:31;;;;;;11485:1069;;;;;;;:::o;13152:1295::-;13309:7;13366:1;13356:7;:11;13348:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13436:1;13416:17;:21;13408:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13514:1;13495:16;:20;;;13487:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10873:7;13573:30;;:16;:30;;;;13565:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13686:7;13671:11;:22;;13663:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13803:1;13788:11;:16;13784:45;;;13821:1;13814:8;;;;13784:45;13904:7;13889:11;:22;13885:67;;;13928:17;13921:24;;;;13885:67;10873:7;14003:30;;:16;:30;;;13999:105;;;14050:47;14089:7;14050:34;14072:11;14050:17;:21;;:34;;;;:::i;:::-;:38;;:47;;;;:::i;:::-;14043:54;;;;13999:105;14109:14;14129:15;14150:13;14176:11;14166:7;:21;14150:37;;14215:63;14228:7;14237:5;10873:7;14256:16;14215:5;:63::i;:::-;14193:85;;;;;;;;14284:18;14305:29;14327:6;14305:17;:21;;:29;;;;:::i;:::-;14284:50;;14340:18;14382:9;14361:30;;:17;:30;;14340:51;;14404:38;14435:6;14404:26;14419:10;14404;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;14397:45;;;;;;;13152:1295;;;;;;;:::o;10803:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;229:421:25:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;778:296::-;836:7;933:1;929;:5;921:14;;;;;;945:9;961:1;957;:5;;;;;;945:17;;1066:1;1059:8;;;778:296;;;;:::o;1431:145::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;20910:767:18:-;21028:7;21037:5;11043:35;21059:6;:16;21052:24;;;;21100:6;21090;:16;;21082:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21146:15;21167:12;21201:6;10895:35;21182:6;:16;:25;;;;;;21167:40;;11451:35;21217:4;:22;21213:116;;;21259:16;21270:4;21259:10;:16::i;:::-;21249:26;;21213:116;;;21306:16;21317:4;21306:10;:16::i;:::-;21296:26;;21213:116;21335:23;21379:5;21361:23;;21371:5;21361:15;;:7;:15;:23;;;;;;21335:49;;11535:35;21394:15;:33;21390:283;;;21445:27;21456:15;21445:10;:27::i;:::-;10668:3;21437:51;;;;;;;;;21390:283;21509:15;21527:42;21553:15;21527:25;:42::i;:::-;21509:60;;21585:69;21632:9;10668:3;21616:25;21596:46;;:15;:46;;21644:9;21585:10;:69::i;:::-;21656:9;21577:89;;;;;;;;20910:767;;;;;;;;:::o;1205:145:25:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;28376:2373:18:-;28430:7;28448:11;28462:1;28448:15;;28473:9;28491;28509;28537:34;28532:1;:39;28528:143;;28581:34;28574:41;;;;28635:34;10895:35;28621:1;:11;:48;;;;;;28617:52;;28528:143;28688:34;28683:1;:39;28679:143;;28732:34;28725:41;;;;28786:34;10895:35;28772:1;:11;:48;;;;;;28768:52;;28679:143;28839:34;28834:1;:39;28830:143;;28883:34;28876:41;;;;28937:34;10895:35;28923:1;:11;:48;;;;;;28919:52;;28830:143;28990:34;28985:1;:39;28981:143;;29034:34;29027:41;;;;29088:34;10895:35;29074:1;:11;:48;;;;;;29070:52;;28981:143;29141:34;29136:1;:39;29132:143;;29185:34;29178:41;;;;29239:34;10895:35;29225:1;:11;:48;;;;;;29221:52;;29132:143;29292:34;29287:1;:39;29283:143;;29336:34;29329:41;;;;29390:34;10895:35;29376:1;:11;:48;;;;;;29372:52;;29283:143;29443:34;29438:1;:39;29434:143;;29487:34;29480:41;;;;29541:34;10895:35;29527:1;:11;:48;;;;;;29523:52;;29434:143;29594:34;29589:1;:39;29585:143;;29638:34;29631:41;;;;29692:34;10895:35;29678:1;:11;:48;;;;;;29674:52;;29585:143;10895:35;29745:1;:11;29741:15;;;29737:19;;10895:35;29773:1;29769;:5;:15;;;;;;29765:19;;29848:35;29843:1;29805:35;:39;29800:1;:45;:83;;;;;;29793:90;;;;10895:35;29893:1;29889;:5;:15;;;;;;29885:19;;29968:35;29963:1;29925:35;:39;29920:1;:45;:83;;;;;;29913:90;;;;10895:35;30013:1;30009;:5;:15;;;;;;30005:19;;30088:35;30083:1;30045:35;:39;30040:1;:45;:83;;;;;;30033:90;;;;10895:35;30133:1;30129;:5;:15;;;;;;30125:19;;30208:35;30203:1;30165:35;:39;30160:1;:45;:83;;;;;;30153:90;;;;10895:35;30253:1;30249;:5;:15;;;;;;30245:19;;30328:35;30323:1;30285:35;:39;30280:1;:45;:83;;;;;;30273:90;;;;10895:35;30373:1;30369;:5;:15;;;;;;30365:19;;30448:35;30443:1;30405:35;:39;30400:1;:45;:83;;;;;;30393:90;;;;10895:35;30493:1;30489;:5;:15;;;;;;30485:19;;30568:35;30563:1;30525:35;:39;30520:1;:45;:83;;;;;;30513:90;;;;10895:35;30613:1;30609;:5;:15;;;;;;30605:19;;30688:35;30683:1;30645:35;:39;30640:1;:45;:83;;;;;;30633:90;;;;30740:3;30733:10;;;;;;28376:2373;;;:::o;21832:714::-;21887:7;21902:11;21916:1;21902:15;;21923:9;21935:2;21923:14;;10969:35;22035:1;:12;22031:130;;22057:11;22071:22;10895:35;22081:1;:11;;;;;;22071:9;:22::i;:::-;22057:36;;22107:5;22101:11;;;;;;;10895:35;22139:5;:15;;;22133:21;;22031:130;;10895:35;22258:1;:11;22254:237;;;22284:7;10668:3;22284:23;;22279:206;22313:1;22309;:5;;;22279:206;;;10895:35;22340:1;22336;:5;22335:17;;;;;;22331:21;;10969:35;22383:1;:12;22379:98;;22415:1;22409:7;;;;;22464:1;22460;:5;22452:14;;10579:1;22452:14;;22445:21;;;;22379:98;22316:3;;;;;;22279:206;;;;22254:237;11270:33;11190;22504:3;:19;:37;;;;;;22497:44;;;;21832:714;;;:::o;30914:2947::-;30968:7;30986:11;31000:1;30986:15;;31011:9;31029;31060:34;31056:1;:38;;;;;;31052:42;;;31048:46;;10895:35;31111:1;31107;:5;:15;;;;;;31103:19;;31135:18;31131:1;:22;31124:29;;;;10895:35;31196:1;31192;:5;:15;;;;;;31188:19;;31220:18;31216:1;:22;31209:29;;;;10895:35;31281:1;31277;:5;:15;;;;;;31273:19;;31305:18;31301:1;:22;31294:29;;;;10895:35;31366:1;31362;:5;:15;;;;;;31358:19;;31390:18;31386:1;:22;31379:29;;;;10895:35;31451:1;31447;:5;:15;;;;;;31443:19;;31475:18;31471:1;:22;31464:29;;;;10895:35;31536:1;31532;:5;:15;;;;;;31528:19;;31560:18;31556:1;:22;31549:29;;;;10895:35;31621:1;31617;:5;:15;;;;;;31613:19;;31645:18;31641:1;:22;31634:29;;;;10895:35;31706:1;31702;:5;:15;;;;;;31698:19;;31730:18;31726:1;:22;31719:29;;;;10895:35;31791:1;31787;:5;:15;;;;;;31783:19;;31815:18;31811:1;:22;31804:29;;;;10895:35;31876:1;31872;:5;:15;;;;;;31868:19;;31900:18;31896:1;:22;31889:29;;;;10895:35;31961:1;31957;:5;:15;;;;;;31953:19;;31985:18;31981:1;:22;31974:29;;;;10895:35;32046:1;32042;:5;:15;;;;;;32038:19;;32070:18;32066:1;:22;32059:29;;;;10895:35;32131:1;32127;:5;:15;;;;;;32123:19;;32155:18;32151:1;:22;32144:29;;;;10895:35;32216:1;32212;:5;:15;;;;;;32208:19;;32240:18;32236:1;:22;32229:29;;;;10895:35;32301:1;32297;:5;:15;;;;;;32293:19;;32325:18;32321:1;:22;32314:29;;;;10895:35;32386:1;32382;:5;:15;;;;;;32378:19;;32410:18;32406:1;:22;32399:29;;;;10895:35;32471:1;32467;:5;:15;;;;;;32463:19;;32495:18;32491:1;:22;32484:29;;;;10895:35;32556:1;32552;:5;:15;;;;;;32548:19;;32580:18;32576:1;:22;32569:29;;;;10895:35;32641:1;32637;:5;:15;;;;;;32633:19;;32665:18;32661:1;:22;32654:29;;;;10895:35;32751:1;32730:18;32724:3;:24;;;;;;:28;:38;32718:44;;32871:1;32831:35;32827:1;:39;32826:46;32822:137;;32924:35;32886;32880:3;:41;:79;;;;;;32874:85;;32822:137;33017:1;32977:35;32973:1;:39;32972:46;32968:137;;33070:35;33032;33026:3;:41;:79;;;;;;33020:85;;32968:137;33163:1;33123:35;33119:1;:39;33118:46;33114:137;;33216:35;33178;33172:3;:41;:79;;;;;;33166:85;;33114:137;33309:1;33269:35;33265:1;:39;33264:46;33260:137;;33362:35;33324;33318:3;:41;:79;;;;;;33312:85;;33260:137;33455:1;33415:35;33411:1;:39;33410:46;33406:137;;33508:35;33470;33464:3;:41;:79;;;;;;33458:85;;33406:137;33601:1;33561:35;33557:1;:39;33556:46;33552:137;;33654:35;33616;33610:3;:41;:79;;;;;;33604:85;;33552:137;33747:1;33707:35;33703:1;:39;33702:46;33698:137;;33800:35;33762;33756:3;:41;:79;;;;;;33750:85;;33698:137;33852:3;33845:10;;;;;30914:2947;;;:::o;23420:424::-;23492:5;23507:8;10623:2;23507:24;;23537:8;10668:3;23537:24;;23568:141;23584:2;23575:11;;23580:1;23575:2;:6;:11;;;23568:141;;;23596:9;23620:1;23614:2;23609;:7;23608:13;;;;;;;;23596:25;;23653:2;23633:11;23645:3;23633:16;;;;;;;;;;;:22;23629:73;;23670:3;23665:8;;23629:73;;;23699:3;23694:8;;23629:73;23568:141;;;;23738:2;23719:11;23731:2;23719:15;;;;;;;;;;;:21;23715:42;;23755:2;23748:9;;;;;;23715:42;23786:2;23767:11;23779:2;23767:15;;;;;;;;;;;:21;23763:42;;23803:2;23796:9;;;;;;23763:42;23819:5;23812:13;;;;23838:1;23831:8;;;;23420:424;;;;:::o;24416:3790::-;24489:7;24507:10;24520:2;24507:15;;24531:11;24545:1;24531:15;;24574:10;24561:23;;24567:2;24562;:7;24561:23;;24556:28;;24598:33;24593:2;:38;24586:45;;;;24684:10;24671:23;;24677:2;24672;:7;24671:23;;24666:28;;24708:33;24703:2;:38;24696:45;;;;24794:10;24781:23;;24787:2;24782;:7;24781:23;;24776:28;;24818:33;24813:2;:38;24806:45;;;;24904:10;24891:23;;24897:2;24892;:7;24891:23;;24886:28;;24928:33;24923:2;:38;24916:45;;;;25014:10;25001:23;;25007:2;25002;:7;25001:23;;24996:28;;25038:33;25033:2;:38;25026:45;;;;25124:10;25111:23;;25117:2;25112;:7;25111:23;;25106:28;;25148:33;25143:2;:38;25136:45;;;;25234:10;25221:23;;25227:2;25222;:7;25221:23;;25216:28;;25258:33;25253:2;:38;25246:45;;;;25344:10;25331:23;;25337:2;25332;:7;25331:23;;25326:28;;25368:33;25363:2;:38;25356:45;;;;25454:10;25441:23;;25447:2;25442;:7;25441:23;;25436:28;;25478:33;25473:2;:38;25466:45;;;;25564:10;25551:23;;25557:2;25552;:7;25551:23;;25546:28;;25588:33;25583:2;:38;25576:45;;;;25674:10;25661:23;;25667:2;25662;:7;25661:23;;25656:28;;25698:33;25693:2;:38;25686:45;;;;25784:10;25771:23;;25777:2;25772;:7;25771:23;;25766:28;;25808:33;25803:2;:38;25796:45;;;;25894:10;25881:23;;25887:2;25882;:7;25881:23;;25876:28;;25918:33;25913:2;:38;25906:45;;;;26004:10;25991:23;;25997:2;25992;:7;25991:23;;25986:28;;26028:33;26023:2;:38;26016:45;;;;26114:10;26101:23;;26107:2;26102;:7;26101:23;;26096:28;;26138:33;26133:2;:38;26126:45;;;;26224:10;26211:23;;26217:2;26212;:7;26211:23;;26206:28;;26248:33;26243:2;:38;26236:45;;;;26334:10;26321:23;;26327:2;26322;:7;26321:23;;26316:28;;26358:33;26353:2;:38;26346:45;;;;26444:10;26431:23;;26437:2;26432;:7;26431:23;;26426:28;;26468:33;26463:2;:38;26456:45;;;;26554:10;26541:23;;26547:2;26542;:7;26541:23;;26536:28;;26578:33;26573:2;:38;26566:45;;;;26664:10;26651:23;;26657:2;26652;:7;26651:23;;26646:28;;26688:33;26683:2;:38;26676:45;;;;26774:10;26761:23;;26767:2;26762;:7;26761:23;;26756:28;;26798:33;26793:2;:38;26786:45;;;;26884:10;26871:23;;26877:2;26872;:7;26871:23;;26866:28;;26908:33;26903:2;:38;26896:45;;;;26994:10;26981:23;;26987:2;26982;:7;26981:23;;26976:28;;27018:33;27013:2;:38;27006:45;;;;27104:10;27091:23;;27097:2;27092;:7;27091:23;;27086:28;;27128:33;27123:2;:38;27116:45;;;;27214:10;27201:23;;27207:2;27202;:7;27201:23;;27196:28;;27238:33;27233:2;:38;27226:45;;;;27324:10;27311:23;;27317:2;27312;:7;27311:23;;27306:28;;27348:33;27343:2;:38;27336:45;;;;27434:10;27421:23;;27427:2;27422;:7;27421:23;;27416:28;;27458:33;27453:2;:38;27446:45;;;;27544:10;27531:23;;27537:2;27532;:7;27531:23;;27526:28;;27568:33;27563:2;:38;27556:45;;;;27654:10;27641:23;;27647:2;27642;:7;27641:23;;27636:28;;27678:33;27673:2;:38;27666:45;;;;27764:10;27751:23;;27757:2;27752;:7;27751:23;;27746:28;;27788:33;27783:2;:38;27776:45;;;;27874:10;27861:23;;27867:2;27862;:7;27861:23;;27856:28;;27898:33;27893:2;:38;27886:45;;;;27984:10;27971:23;;27977:2;27972;:7;27971:23;;27966:28;;28008:33;28003:2;:38;27996:45;;;;28139:10;28132:17;;10579:1;28132:17;;28126:2;28090:33;28084:3;:39;;;;;;:44;:66;28077:73;;;;24416:3790;;;;:::o;22653:418::-;22707:5;22720:9;22732:1;22720:13;;22739:9;22751:2;22739:14;;22768:3;22764:1;:7;22760:290;;;22811:58;22822:1;22818;:5;22811:58;;;22841:1;22835:7;;;;;22859:1;22852:8;;;;22811:58;;;22760:290;;;22924:7;22934:3;22924:13;;22919:125;22943:1;22939;:5;;;22919:125;;;22982:1;22975:8;;10579:1;22975:8;;22969:1;:15;22965:71;;23004:1;22998:7;;;;;;;23024:1;23017:8;;;;22965:71;22952:1;22946:7;;;;;;;22919:125;;;;22760:290;23063:3;23056:10;;;;22653:418;;;:::o",
  "source": "/* Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\n\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"{}\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\n\nCopyright 2017 Bprotocol Foundation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. */\n\npragma solidity ^0.5.0;\n\nimport \"./math/SafeMath.sol\";\n\nimport \"./Power.sol\";\n\n /**\n * @title Bancor formula by Bancor\n * @dev Modified from the original by Slava Balasanov\n * https://github.com/bancorprotocol/contracts\n * Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n * and to You under the Apache License, Version 2.0. \"\n */\ncontract BancorFormula is Power {\n  using SafeMath for uint256;\n  string public version = \"0.3\";\n  uint32 private constant MAX_WEIGHT = 1000000;\n\n  /**\n  * @dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\n  * calculates the return for a given conversion (in the main token)\n  *\n  * Formula:\n  * Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n  *\n  * @param _supply              token total supply\n  * @param _connectorBalance    total connector balance\n  * @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n  * @param _depositAmount       deposit amount, in connector token\n  *\n  *  @return purchase return amount\n  */\n  function calculatePurchaseReturn(\n    uint256 _supply,\n    uint256 _connectorBalance,\n    uint32 _connectorWeight,\n    uint256 _depositAmount) public view returns (uint256)\n  {\n    // validate input\n    require(_supply > 0, \"BancorFormula: Supply not > 0.\");\n    require(_connectorBalance > 0, \"BancorFormula: ConnectorBalance not > 0\");\n    require(_connectorWeight > 0, \"BancorFormula: Connector Weight not > 0\");\n    require(_connectorWeight <= MAX_WEIGHT, \"BancorFormula: Connector Weight not <= MAX_WEIGHT\");\n\n     // special case for 0 deposit amount\n    if (_depositAmount == 0) {\n      return 0;\n    }\n     // special case if the weight = 100%\n    if (_connectorWeight == MAX_WEIGHT) {\n      return _supply.mul(_depositAmount).div(_connectorBalance);\n    }\n    uint256 result;\n    uint8 precision;\n    uint256 baseN = _depositAmount.add(_connectorBalance);\n    (result, precision) = power(\n      baseN, _connectorBalance, _connectorWeight, MAX_WEIGHT\n    );\n    uint256 newTokenSupply = _supply.mul(result) >> precision;\n    return newTokenSupply - _supply;\n  }\n\n  /**\n  * @dev given a token supply, connector balance, weight and a sell amount (in the main token),\n  * calculates the return for a given conversion (in the connector token)\n  *\n  * Formula:\n  * Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n  *\n  * @param _supply              token total supply\n  * @param _connectorBalance    total connector\n  * @param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n  * @param _sellAmount          sell amount, in the token itself\n  *\n  * @return sale return amount\n  */\n  function calculateSaleReturn(\n    uint256 _supply,\n    uint256 _connectorBalance,\n    uint32 _connectorWeight,\n    uint256 _sellAmount) public view returns (uint256)\n  {\n    // validate input\n    require(_supply > 0, \"BancorFormula: Supply not > 0.\");\n    require(_connectorBalance > 0, \"BancorFormula: ConnectorBalance not > 0\");\n    require(_connectorWeight > 0, \"BancorFormula: Connector Weight not > 0\");\n    require(_connectorWeight <= MAX_WEIGHT, \"BancorFormula: Connector Weight not <= MAX_WEIGHT\");\n    require(_sellAmount <= _supply, \"BancorFormula: Sell Amount not <= Supply\");\n\n     // special case for 0 sell amount\n    if (_sellAmount == 0) {\n      return 0;\n    }\n     // special case for selling the entire supply\n    if (_sellAmount == _supply) {\n      return _connectorBalance;\n    }\n     // special case if the weight = 100%\n    if (_connectorWeight == MAX_WEIGHT) {\n      return _connectorBalance.mul(_sellAmount).div(_supply);\n    }\n    uint256 result;\n    uint8 precision;\n    uint256 baseD = _supply - _sellAmount;\n    (result, precision) = power(\n      _supply, baseD, MAX_WEIGHT, _connectorWeight\n    );\n    uint256 oldBalance = _connectorBalance.mul(result);\n    uint256 newBalance = _connectorBalance << precision;\n    return oldBalance.sub(newBalance).div(result);\n  }\n}\n",
  "sourcePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/BancorFormula.sol",
  "ast": {
    "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/BancorFormula.sol",
    "exportedSymbols": {
      "BancorFormula": [
        2889
      ]
    },
    "id": 2890,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2656,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "10255:23:12"
      },
      {
        "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 2657,
        "nodeType": "ImportDirective",
        "scope": 2890,
        "sourceUnit": 6551,
        "src": "10280:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/Power.sol",
        "file": "./Power.sol",
        "id": 2658,
        "nodeType": "ImportDirective",
        "scope": 2890,
        "sourceUnit": 5892,
        "src": "10311:21:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2659,
              "name": "Power",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5891,
              "src": "10763:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Power_$5891",
                "typeString": "contract Power"
              }
            },
            "id": 2660,
            "nodeType": "InheritanceSpecifier",
            "src": "10763:5:12"
          }
        ],
        "contractDependencies": [
          5891
        ],
        "contractKind": "contract",
        "documentation": "@title Bancor formula by Bancor\n@dev Modified from the original by Slava Balasanov\nhttps://github.com/bancorprotocol/contracts\nSplit Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\nLicensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\nand to You under the Apache License, Version 2.0. \"",
        "fullyImplemented": true,
        "id": 2889,
        "linearizedBaseContracts": [
          2889,
          5891
        ],
        "name": "BancorFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2663,
            "libraryName": {
              "contractScope": null,
              "id": 2661,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6550,
              "src": "10779:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6550",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "10773:27:12",
            "typeName": {
              "id": 2662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10792:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2666,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2889,
            "src": "10803:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2664,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "10803:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e33",
              "id": 2665,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10827:5:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a25c22aa6f10fa2261b798fea6b4e2f0567ea2644e38ffd2fdadd1108b091261",
                "typeString": "literal_string \"0.3\""
              },
              "value": "0.3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2669,
            "name": "MAX_WEIGHT",
            "nodeType": "VariableDeclaration",
            "scope": 2889,
            "src": "10836:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 2667,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "10836:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030",
              "id": 2668,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10873:7:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2767,
              "nodeType": "Block",
              "src": "11660:894:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2683,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "11696:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11706:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11696:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e",
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11709:32:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        },
                        "value": "BancorFormula: Supply not > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        }
                      ],
                      "id": 2682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11688:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11688:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "11688:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2690,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2673,
                          "src": "11756:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11776:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11756:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e2030",
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11779:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        },
                        "value": "BancorFormula: ConnectorBalance not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        }
                      ],
                      "id": 2689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11748:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11748:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "11748:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2697,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "11835:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11854:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11835:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e2030",
                        "id": 2700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11857:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        },
                        "value": "BancorFormula: Connector Weight not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        }
                      ],
                      "id": 2696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11827:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11827:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2702,
                  "nodeType": "ExpressionStatement",
                  "src": "11827:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2704,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "11913:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2705,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "11933:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "11913:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854",
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11945:51:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        },
                        "value": "BancorFormula: Connector Weight not <= MAX_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        }
                      ],
                      "id": 2703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11905:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11905:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "11905:92:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2710,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "12050:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12068:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12050:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "12046:48:12",
                  "trueBody": {
                    "id": 2715,
                    "nodeType": "Block",
                    "src": "12071:23:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12086:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2681,
                        "id": 2714,
                        "nodeType": "Return",
                        "src": "12079:8:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2675,
                      "src": "12145:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2718,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12165:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12145:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2729,
                  "nodeType": "IfStatement",
                  "src": "12141:108:12",
                  "trueBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "12177:72:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2725,
                              "name": "_connectorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2673,
                              "src": "12224:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2722,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2677,
                                  "src": "12204:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2720,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2671,
                                  "src": "12192:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6457,
                                "src": "12192:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12192:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6481,
                            "src": "12192:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12192:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2681,
                        "id": 2727,
                        "nodeType": "Return",
                        "src": "12185:57:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2731,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12254:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12254:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2732,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12254:14:12"
                },
                {
                  "assignments": [
                    2734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2734,
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12274:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2733,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12274:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2735,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12274:15:12"
                },
                {
                  "assignments": [
                    2737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2737,
                      "name": "baseN",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12295:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12295:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2742,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2740,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "12330:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2738,
                        "name": "_depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "12311:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6529,
                      "src": "12311:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12311:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12295:53:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2743,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "12355:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2744,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2734,
                          "src": "12363:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 2745,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12354:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2747,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2737,
                          "src": "12389:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2748,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2673,
                          "src": "12396:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2749,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "12415:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2750,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "12433:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2746,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "12376:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 2751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12376:73:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "12354:95:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2753,
                  "nodeType": "ExpressionStatement",
                  "src": "12354:95:12"
                },
                {
                  "assignments": [
                    2755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2755,
                      "name": "newTokenSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12455:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12455:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2762,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2758,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "12492:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2756,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "12480:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6457,
                        "src": "12480:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12480:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2760,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2734,
                      "src": "12503:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12480:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12455:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2763,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2755,
                      "src": "12525:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2764,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "12542:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12525:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2681,
                  "id": 2766,
                  "nodeType": "Return",
                  "src": "12518:31:12"
                }
              ]
            },
            "documentation": "@dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\ncalculates the return for a given conversion (in the main token)\n  * Formula:\nReturn = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n  * @param _supply              token total supply\n@param _connectorBalance    total connector balance\n@param _connectorWeight     connector weight, represented in ppm, 1-1000000\n@param _depositAmount       deposit amount, in connector token\n  *  @return purchase return amount",
            "id": 2768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11523:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11523:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_connectorBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11544:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11544:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "name": "_connectorWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11575:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11575:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "name": "_depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11604:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11517:110:12"
            },
            "returnParameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2680,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11649:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11649:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11648:9:12"
            },
            "scope": 2889,
            "src": "11485:1069:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2887,
              "nodeType": "Block",
              "src": "13320:1127:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2782,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "13356:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13366:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13356:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e",
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13369:32:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        },
                        "value": "BancorFormula: Supply not > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        }
                      ],
                      "id": 2781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13348:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13348:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "13348:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2789,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "13416:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13436:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13416:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e2030",
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13439:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        },
                        "value": "BancorFormula: ConnectorBalance not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        }
                      ],
                      "id": 2788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13408:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13408:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "13408:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2796,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "13495:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13514:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13495:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e2030",
                        "id": 2799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13517:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        },
                        "value": "BancorFormula: Connector Weight not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        }
                      ],
                      "id": 2795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13487:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13487:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2801,
                  "nodeType": "ExpressionStatement",
                  "src": "13487:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2803,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "13573:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2804,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "13593:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "13573:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854",
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13605:51:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        },
                        "value": "BancorFormula: Connector Weight not <= MAX_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        }
                      ],
                      "id": 2802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13565:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13565:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "13565:92:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2810,
                          "name": "_sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2776,
                          "src": "13671:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2811,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "13686:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13671:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a2053656c6c20416d6f756e74206e6f74203c3d20537570706c79",
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13695:42:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f01a02805ef380b1310aa9c027a1b89d4c88b839cfc7e53d6cbd818b50407cc6",
                          "typeString": "literal_string \"BancorFormula: Sell Amount not <= Supply\""
                        },
                        "value": "BancorFormula: Sell Amount not <= Supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f01a02805ef380b1310aa9c027a1b89d4c88b839cfc7e53d6cbd818b50407cc6",
                          "typeString": "literal_string \"BancorFormula: Sell Amount not <= Supply\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13663:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13663:75:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "ExpressionStatement",
                  "src": "13663:75:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "13788:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13803:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13788:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2822,
                  "nodeType": "IfStatement",
                  "src": "13784:45:12",
                  "trueBody": {
                    "id": 2821,
                    "nodeType": "Block",
                    "src": "13806:23:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13821:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2780,
                        "id": 2820,
                        "nodeType": "Return",
                        "src": "13814:8:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2823,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "13889:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2824,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "13904:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13889:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2829,
                  "nodeType": "IfStatement",
                  "src": "13885:67:12",
                  "trueBody": {
                    "id": 2828,
                    "nodeType": "Block",
                    "src": "13913:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2826,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "13928:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2780,
                        "id": 2827,
                        "nodeType": "Return",
                        "src": "13921:24:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2830,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2774,
                      "src": "14003:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2831,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "14023:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14003:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2842,
                  "nodeType": "IfStatement",
                  "src": "13999:105:12",
                  "trueBody": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "14035:69:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2838,
                              "name": "_supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "14089:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2835,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2776,
                                  "src": "14072:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2833,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2772,
                                  "src": "14050:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6457,
                                "src": "14050:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14050:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6481,
                            "src": "14050:38:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14050:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2780,
                        "id": 2840,
                        "nodeType": "Return",
                        "src": "14043:54:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2844,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14109:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14109:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2845,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14109:14:12"
                },
                {
                  "assignments": [
                    2847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2847,
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14129:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2846,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "14129:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2848,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14129:15:12"
                },
                {
                  "assignments": [
                    2850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2850,
                      "name": "baseD",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14150:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14150:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2854,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2851,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "14166:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2852,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "14176:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14166:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14150:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2855,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2844,
                          "src": "14194:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2856,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2847,
                          "src": "14202:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 2857,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14193:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2859,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "14228:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2860,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2850,
                          "src": "14237:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2861,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "14244:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2862,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "14256:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2858,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "14215:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 2863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14215:63:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "14193:85:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "14193:85:12"
                },
                {
                  "assignments": [
                    2867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2867,
                      "name": "oldBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14284:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14284:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2870,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "14327:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "14305:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6457,
                      "src": "14305:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14305:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14284:50:12"
                },
                {
                  "assignments": [
                    2874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2874,
                      "name": "newBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14340:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2873,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14340:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2878,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2875,
                      "name": "_connectorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "14361:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2876,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2847,
                      "src": "14382:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14361:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14340:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2884,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "14435:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2881,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2874,
                            "src": "14419:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2879,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2867,
                            "src": "14404:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6505,
                          "src": "14404:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14404:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6481,
                      "src": "14404:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14404:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2780,
                  "id": 2886,
                  "nodeType": "Return",
                  "src": "14397:45:12"
                }
              ]
            },
            "documentation": "@dev given a token supply, connector balance, weight and a sell amount (in the main token),\ncalculates the return for a given conversion (in the connector token)\n  * Formula:\nReturn = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n  * @param _supply              token total supply\n@param _connectorBalance    total connector\n@param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n@param _sellAmount          sell amount, in the token itself\n  * @return sale return amount",
            "id": 2888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13186:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13186:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "name": "_connectorBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13207:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "name": "_connectorWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13238:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13238:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "name": "_sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13267:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13267:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13180:107:12"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13309:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13309:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13308:9:12"
            },
            "scope": 2889,
            "src": "13152:1295:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2890,
        "src": "10737:3712:12"
      }
    ],
    "src": "10255:4195:12"
  },
  "legacyAST": {
    "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/BancorFormula.sol",
    "exportedSymbols": {
      "BancorFormula": [
        2889
      ]
    },
    "id": 2890,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2656,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "10255:23:12"
      },
      {
        "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 2657,
        "nodeType": "ImportDirective",
        "scope": 2890,
        "sourceUnit": 6551,
        "src": "10280:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ggarrido/lightstreams/workspace/lightstreams-js-sdk/contracts/bondingcurve/vendor/Power.sol",
        "file": "./Power.sol",
        "id": 2658,
        "nodeType": "ImportDirective",
        "scope": 2890,
        "sourceUnit": 5892,
        "src": "10311:21:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2659,
              "name": "Power",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5891,
              "src": "10763:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Power_$5891",
                "typeString": "contract Power"
              }
            },
            "id": 2660,
            "nodeType": "InheritanceSpecifier",
            "src": "10763:5:12"
          }
        ],
        "contractDependencies": [
          5891
        ],
        "contractKind": "contract",
        "documentation": "@title Bancor formula by Bancor\n@dev Modified from the original by Slava Balasanov\nhttps://github.com/bancorprotocol/contracts\nSplit Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\nLicensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\nand to You under the Apache License, Version 2.0. \"",
        "fullyImplemented": true,
        "id": 2889,
        "linearizedBaseContracts": [
          2889,
          5891
        ],
        "name": "BancorFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2663,
            "libraryName": {
              "contractScope": null,
              "id": 2661,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6550,
              "src": "10779:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6550",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "10773:27:12",
            "typeName": {
              "id": 2662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10792:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2666,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2889,
            "src": "10803:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2664,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "10803:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e33",
              "id": 2665,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10827:5:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a25c22aa6f10fa2261b798fea6b4e2f0567ea2644e38ffd2fdadd1108b091261",
                "typeString": "literal_string \"0.3\""
              },
              "value": "0.3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2669,
            "name": "MAX_WEIGHT",
            "nodeType": "VariableDeclaration",
            "scope": 2889,
            "src": "10836:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 2667,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "10836:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030",
              "id": 2668,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10873:7:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2767,
              "nodeType": "Block",
              "src": "11660:894:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2683,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "11696:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11706:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11696:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e",
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11709:32:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        },
                        "value": "BancorFormula: Supply not > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        }
                      ],
                      "id": 2682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11688:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11688:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "11688:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2690,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2673,
                          "src": "11756:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11776:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11756:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e2030",
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11779:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        },
                        "value": "BancorFormula: ConnectorBalance not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        }
                      ],
                      "id": 2689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11748:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11748:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "11748:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2697,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "11835:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11854:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11835:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e2030",
                        "id": 2700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11857:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        },
                        "value": "BancorFormula: Connector Weight not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        }
                      ],
                      "id": 2696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11827:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11827:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2702,
                  "nodeType": "ExpressionStatement",
                  "src": "11827:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2704,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "11913:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2705,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "11933:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "11913:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854",
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11945:51:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        },
                        "value": "BancorFormula: Connector Weight not <= MAX_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        }
                      ],
                      "id": 2703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "11905:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11905:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "11905:92:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2710,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "12050:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12068:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12050:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "12046:48:12",
                  "trueBody": {
                    "id": 2715,
                    "nodeType": "Block",
                    "src": "12071:23:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12086:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2681,
                        "id": 2714,
                        "nodeType": "Return",
                        "src": "12079:8:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2675,
                      "src": "12145:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2718,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12165:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12145:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2729,
                  "nodeType": "IfStatement",
                  "src": "12141:108:12",
                  "trueBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "12177:72:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2725,
                              "name": "_connectorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2673,
                              "src": "12224:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2722,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2677,
                                  "src": "12204:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2720,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2671,
                                  "src": "12192:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6457,
                                "src": "12192:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12192:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6481,
                            "src": "12192:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12192:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2681,
                        "id": 2727,
                        "nodeType": "Return",
                        "src": "12185:57:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2731,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12254:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12254:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2732,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12254:14:12"
                },
                {
                  "assignments": [
                    2734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2734,
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12274:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2733,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12274:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2735,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12274:15:12"
                },
                {
                  "assignments": [
                    2737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2737,
                      "name": "baseN",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12295:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12295:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2742,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2740,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "12330:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2738,
                        "name": "_depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "12311:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6529,
                      "src": "12311:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12311:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12295:53:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2743,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "12355:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2744,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2734,
                          "src": "12363:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 2745,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12354:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2747,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2737,
                          "src": "12389:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2748,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2673,
                          "src": "12396:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2749,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "12415:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2750,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "12433:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2746,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "12376:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 2751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12376:73:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "12354:95:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2753,
                  "nodeType": "ExpressionStatement",
                  "src": "12354:95:12"
                },
                {
                  "assignments": [
                    2755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2755,
                      "name": "newTokenSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 2767,
                      "src": "12455:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12455:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2762,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2758,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2731,
                          "src": "12492:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2756,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "12480:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6457,
                        "src": "12480:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12480:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2760,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2734,
                      "src": "12503:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12480:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12455:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2763,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2755,
                      "src": "12525:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2764,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "12542:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12525:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2681,
                  "id": 2766,
                  "nodeType": "Return",
                  "src": "12518:31:12"
                }
              ]
            },
            "documentation": "@dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\ncalculates the return for a given conversion (in the main token)\n  * Formula:\nReturn = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n  * @param _supply              token total supply\n@param _connectorBalance    total connector balance\n@param _connectorWeight     connector weight, represented in ppm, 1-1000000\n@param _depositAmount       deposit amount, in connector token\n  *  @return purchase return amount",
            "id": 2768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11523:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11523:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_connectorBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11544:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11544:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "name": "_connectorWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11575:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11575:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "name": "_depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11604:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11517:110:12"
            },
            "returnParameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2680,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11649:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11649:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11648:9:12"
            },
            "scope": 2889,
            "src": "11485:1069:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2887,
              "nodeType": "Block",
              "src": "13320:1127:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2782,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "13356:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13366:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13356:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20537570706c79206e6f74203e20302e",
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13369:32:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        },
                        "value": "BancorFormula: Supply not > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a28b97d2e5f7ed38ef5db9263c6be092d2e28c30be17860c749e6a5ed550ad3",
                          "typeString": "literal_string \"BancorFormula: Supply not > 0.\""
                        }
                      ],
                      "id": 2781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13348:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13348:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "13348:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2789,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "13416:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13436:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13416:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7242616c616e6365206e6f74203e2030",
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13439:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        },
                        "value": "BancorFormula: ConnectorBalance not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ff457acb0eb05e46efa73a9929db0e9593b5b5b4b3e1b76e92e9dfcc69d286",
                          "typeString": "literal_string \"BancorFormula: ConnectorBalance not > 0\""
                        }
                      ],
                      "id": 2788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13408:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13408:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "13408:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2796,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "13495:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13514:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13495:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203e2030",
                        "id": 2799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13517:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        },
                        "value": "BancorFormula: Connector Weight not > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8cdfc6acdf50195e00debb2fd6217fbb04b4634ab0bc8f4eec940db22bc63cf",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not > 0\""
                        }
                      ],
                      "id": 2795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13487:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13487:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2801,
                  "nodeType": "ExpressionStatement",
                  "src": "13487:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2803,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "13573:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2804,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "13593:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "13573:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a20436f6e6e6563746f7220576569676874206e6f74203c3d204d41585f574549474854",
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13605:51:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        },
                        "value": "BancorFormula: Connector Weight not <= MAX_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffa59770acc7cb69a2afc5254b4f8862487a0b35f2da8e0855832fdb45d2e449",
                          "typeString": "literal_string \"BancorFormula: Connector Weight not <= MAX_WEIGHT\""
                        }
                      ],
                      "id": 2802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13565:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13565:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "13565:92:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2810,
                          "name": "_sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2776,
                          "src": "13671:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2811,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "13686:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13671:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42616e636f72466f726d756c613a2053656c6c20416d6f756e74206e6f74203c3d20537570706c79",
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13695:42:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f01a02805ef380b1310aa9c027a1b89d4c88b839cfc7e53d6cbd818b50407cc6",
                          "typeString": "literal_string \"BancorFormula: Sell Amount not <= Supply\""
                        },
                        "value": "BancorFormula: Sell Amount not <= Supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f01a02805ef380b1310aa9c027a1b89d4c88b839cfc7e53d6cbd818b50407cc6",
                          "typeString": "literal_string \"BancorFormula: Sell Amount not <= Supply\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8396,
                        8397
                      ],
                      "referencedDeclaration": 8397,
                      "src": "13663:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13663:75:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "ExpressionStatement",
                  "src": "13663:75:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "13788:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13803:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13788:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2822,
                  "nodeType": "IfStatement",
                  "src": "13784:45:12",
                  "trueBody": {
                    "id": 2821,
                    "nodeType": "Block",
                    "src": "13806:23:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13821:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2780,
                        "id": 2820,
                        "nodeType": "Return",
                        "src": "13814:8:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2823,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "13889:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2824,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "13904:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13889:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2829,
                  "nodeType": "IfStatement",
                  "src": "13885:67:12",
                  "trueBody": {
                    "id": 2828,
                    "nodeType": "Block",
                    "src": "13913:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2826,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "13928:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2780,
                        "id": 2827,
                        "nodeType": "Return",
                        "src": "13921:24:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2830,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2774,
                      "src": "14003:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2831,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "14023:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14003:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2842,
                  "nodeType": "IfStatement",
                  "src": "13999:105:12",
                  "trueBody": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "14035:69:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2838,
                              "name": "_supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "14089:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2835,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2776,
                                  "src": "14072:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2833,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2772,
                                  "src": "14050:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6457,
                                "src": "14050:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14050:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6481,
                            "src": "14050:38:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14050:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2780,
                        "id": 2840,
                        "nodeType": "Return",
                        "src": "14043:54:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2844,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14109:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14109:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2845,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14109:14:12"
                },
                {
                  "assignments": [
                    2847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2847,
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14129:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2846,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "14129:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2848,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14129:15:12"
                },
                {
                  "assignments": [
                    2850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2850,
                      "name": "baseD",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14150:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14150:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2854,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2851,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "14166:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2852,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "14176:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14166:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14150:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2855,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2844,
                          "src": "14194:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2856,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2847,
                          "src": "14202:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 2857,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14193:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2859,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "14228:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2860,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2850,
                          "src": "14237:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2861,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "14244:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2862,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "14256:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2858,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "14215:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 2863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14215:63:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "14193:85:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "14193:85:12"
                },
                {
                  "assignments": [
                    2867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2867,
                      "name": "oldBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14284:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14284:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2870,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "14327:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "14305:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6457,
                      "src": "14305:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14305:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14284:50:12"
                },
                {
                  "assignments": [
                    2874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2874,
                      "name": "newBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2887,
                      "src": "14340:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2873,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14340:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2878,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2875,
                      "name": "_connectorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "14361:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2876,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2847,
                      "src": "14382:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14361:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14340:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2884,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "14435:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2881,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2874,
                            "src": "14419:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2879,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2867,
                            "src": "14404:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6505,
                          "src": "14404:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14404:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6481,
                      "src": "14404:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14404:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2780,
                  "id": 2886,
                  "nodeType": "Return",
                  "src": "14397:45:12"
                }
              ]
            },
            "documentation": "@dev given a token supply, connector balance, weight and a sell amount (in the main token),\ncalculates the return for a given conversion (in the connector token)\n  * Formula:\nReturn = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n  * @param _supply              token total supply\n@param _connectorBalance    total connector\n@param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n@param _sellAmount          sell amount, in the token itself\n  * @return sale return amount",
            "id": 2888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13186:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13186:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "name": "_connectorBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13207:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "name": "_connectorWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13238:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13238:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "name": "_sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13267:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13267:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13180:107:12"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "13309:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13309:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13308:9:12"
            },
            "scope": 2889,
            "src": "13152:1295:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2890,
        "src": "10737:3712:12"
      }
    ],
    "src": "10255:4195:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-05T16:01:15.202Z",
  "devdoc": {
    "details": "Modified from the original by Slava Balasanov https://github.com/bancorprotocol/contracts Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \"",
    "methods": {
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token)  * Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)",
        "params": {
          "_connectorBalance": "total connector balance",
          "_connectorWeight": "connector weight, represented in ppm, 1-1000000",
          "_depositAmount": "deposit amount, in connector token",
          "_supply": "token total supply"
        },
        "return": "purchase return amount"
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token)  * Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))",
        "params": {
          "_connectorBalance": "total connector",
          "_connectorWeight": "constant connector Weight, represented in ppm, 1-1000000",
          "_sellAmount": "sell amount, in the token itself",
          "_supply": "token total supply"
        },
        "return": "sale return amount"
      }
    },
    "title": "Bancor formula by Bancor"
  },
  "userdoc": {
    "methods": {}
  }
}